(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{212:function(e,t,n){"use strict";n.r(t);var a=n(28),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"installation"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[e._v("#")]),e._v(" Installation")]),e._v(" "),n("p",[e._v("Table of contents:")]),e._v(" "),n("p"),n("div",{staticClass:"table-of-contents"},[n("ul",[n("li",[n("a",{attrs:{href:"#install-and-run"}},[e._v("Install and run")])]),n("li",[n("a",{attrs:{href:"#local-configuration-and-remote-indices"}},[e._v("Local configuration and remote indices")]),n("ul",[n("li",[n("a",{attrs:{href:"#index-rvtindex"}},[e._v("Index RVTINDEX")])]),n("li",[n("a",{attrs:{href:"#index-rvtindex-queries"}},[e._v("Index RVTINDEX_QUERIES")])])])])])]),n("p"),e._v(" "),n("h2",{attrs:{id:"install-and-run"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#install-and-run"}},[e._v("#")]),e._v(" Install and run")]),e._v(" "),n("p",[e._v("You must install "),n("a",{attrs:{href:"https://yarnpkg.com/lang/en/docs/install/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Yarn dependency manager"),n("OutboundLink")],1),e._v(". Then, run:")]),e._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# install dependencies")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("install")]),e._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# serve with hot reload at localhost:8080")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" serve\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# when satisfied, build for production. The result will be in the directory 'dist'")]),e._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("yarn")]),e._v(" run build\n")])])]),n("h2",{attrs:{id:"local-configuration-and-remote-indices"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#local-configuration-and-remote-indices"}},[e._v("#")]),e._v(" Local configuration and remote indices")]),e._v(" "),n("p",[e._v("Edit "),n("code",[e._v("src/config.js")]),e._v(" for the main configuration options at compilation time, such as:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v("ESSERVER")]),e._v(": the URL to the default ElasticSearch server, if not specified in "),n("code",[e._v("local.js")]),e._v(".")]),e._v(" "),n("li",[n("code",[e._v("QUERY_TEMPLATES")]),e._v(": a dictionary of available query templates.")]),e._v(" "),n("li",[e._v("Pre-classified label categories. Analyst can use any arbitrary text to label documents, but some labels are already recognized and colorized differently by "),n("strong",[e._v("RVT2 analyzer")]),e._v(". These are defined in arrays "),n("code",[e._v("IMPORTANT_LABELS")]),e._v(" (red color), "),n("code",[e._v("CHECK_LABELS")]),e._v(" (yellow color) and "),n("code",[e._v("SEEN_LABELS")]),e._v(" (green color). The default color for labels is blue.")]),e._v(" "),n("li",[n("code",[e._v("DEFAULT_ANALYST")]),e._v(": the default name for analysts. The analyst name is used to identify comments and queries and it must be always provided. Use "),n("code",[e._v("null")]),e._v(" to force the analyst to explicitly enter a name in the home page.")])]),e._v(" "),n("p",[e._v("Edit "),n("code",[e._v("dist/local/local.js")]),e._v(" and "),n("code",[e._v("dist/local/local.css")]),e._v(" for some configuration options at run time local for a specific system. Do not include these files in your control version system!")]),e._v(" "),n("ul",[n("li",[e._v("variable "),n("code",[e._v("window.ESSERVER")]),e._v(" in "),n("code",[e._v("local.js")]),e._v(": the URL to the default ElasticSearch server.")]),e._v(" "),n("li",[n("code",[e._v("local.css")]),e._v(": any additional CSS for this site. For example, a background.")])]),e._v(" "),n("p",[e._v("Some indices must exist in ElasticSearch before running "),n("em",[e._v("RVT2 indexer")]),e._v(". The name of these indices can be configured in "),n("code",[e._v("src/config.js")]),e._v(" and these are the default names:")]),e._v(" "),n("ul",[n("li",[n("code",[e._v('RVTINDEX: "rvtindexer"')]),e._v(" is used to identify indices than can be analyzed with "),n("em",[e._v("RVT2 analyzer")]),e._v(". It is normally created and managed by the "),n("em",[e._v("indexer")]),e._v(" plugin of "),n("em",[e._v("RVT2")]),e._v(".")]),e._v(" "),n("li",[n("code",[e._v('RVTINDEX_QUERIES: "rvtindexer-queries"')]),e._v(" is used by the web interface to log queries. It is not created automatically, but the default options and mappings for indices in ElasticSearch should be fine.")])]),e._v(" "),n("p",[e._v("In case you must create these indices:")]),e._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" -XPUT ESSERVER/rvtindexer\n"),n("span",{pre:!0,attrs:{class:"token function"}},[e._v("curl")]),e._v(" -XPUT ESSERVER/rvtindexer-queries\n")])])]),n("h3",{attrs:{id:"index-rvtindex"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#index-rvtindex"}},[e._v("#")]),e._v(" Index RVTINDEX")]),e._v(" "),n("p",[e._v("Each document in this index describes a "),n("strong",[e._v("job")]),e._v(" that was launched in "),n("strong",[e._v("RVT2")]),e._v(". This index is usually created and managed by the "),n("strong",[e._v("indexer")]),e._v(" plugin of the "),n("strong",[e._v("RVT2")]),e._v(" (module "),n("code",[e._v("plugins.indexer.elastic.ElasticSearchSink")]),e._v(").")]),e._v(" "),n("p",[e._v("Each job in this index has these fields:")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("_id")]),e._v(": the name of the index the job is using to index document. It is equal to "),n("strong",[e._v("name")]),e._v(".")]),e._v(" "),n("li",[n("strong",[e._v("casename")]),e._v(": the name of the case.")]),e._v(" "),n("li",[n("strong",[e._v("name")]),e._v(": the name of the index the job is using to index document.")]),e._v(" "),n("li",[n("strong",[e._v("source")]),e._v(": the name of the source.")]),e._v(" "),n("li",[n("strong",[e._v("path")]),e._v(": the list of paths the job is using.")]),e._v(" "),n("li",[n("strong",[e._v("description")]),e._v(": a description of the job. It is usually a description of the source.")]),e._v(" "),n("li",[n("strong",[e._v("server")]),e._v(": the server to download files. Files will be downloaded from "),n("code",[e._v("server + filepath")]),e._v(".")]),e._v(" "),n("li",[n("strong",[e._v("status")]),e._v(": the status of the parsing: "),n("em",[e._v("started")]),e._v(", "),n("em",[e._v("ended")]),e._v(", "),n("em",[e._v("error")]),e._v(" or "),n("em",[e._v("interrupted")]),e._v(".")]),e._v(" "),n("li",[n("strong",[e._v("started")]),e._v(": the date when the job started")]),e._v(" "),n("li",[n("strong",[e._v("ended")]),e._v(": if not currently running, the date when the job ended.")])]),e._v(" "),n("h3",{attrs:{id:"index-rvtindex-queries"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#index-rvtindex-queries"}},[e._v("#")]),e._v(" Index RVTINDEX_QUERIES")]),e._v(" "),n("p",[e._v("This index logs the queries made with this interface. It is managed entirely by "),n("strong",[e._v("RVT2 analyzer")]),e._v(".")]),e._v(" "),n("p",[e._v("Queries have these fields:")]),e._v(" "),n("ul",[n("li",[n("strong",[e._v("query")]),e._v(": the query.")]),e._v(" "),n("li",[n("strong",[e._v("query_type")]),e._v(": the query type.")]),e._v(" "),n("li",[n("strong",[e._v("offset")]),e._v(": the offset of the query.")]),e._v(" "),n("li",[n("strong",[e._v("results")]),e._v(": the number of results (integer).")]),e._v(" "),n("li",[n("strong",[e._v("timestamp")]),e._v(": the date when the query finished.")]),e._v(" "),n("li",[n("strong",[e._v("analyst")]),e._v(": the name of the analyst that run the query.")])])])}),[],!1,null,null,null);t.default=s.exports}}]);