(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{224:function(t,s,e){"use strict";e.r(s);var a=e(28),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"plugin-extensions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#plugin-extensions"}},[t._v("#")]),t._v(" Plugin: extensions")]),t._v(" "),e("p",[t._v("You can add new modules to the RVT2. This is an example module.")]),t._v(" "),e("h2",{attrs:{id:"new-module-a-csv-parser"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#new-module-a-csv-parser"}},[t._v("#")]),t._v(" New module: a CSV parser")]),t._v(" "),e("p",[t._v("A new module to parse a CSV file and index it contents in ElasticSearch, ready to be\nsearched with rvt2-analyzer.")]),t._v(" "),e("ol",[e("li",[t._v("Create a directory "),e("code",[t._v("mkdir myjob")]),t._v(" and then "),e("code",[t._v("cd myjob")]),t._v(".")]),t._v(" "),e("li",[t._v("File: "),e("code",[t._v("input.csv")]),t._v(". This will be the file to parse.")])]),t._v(" "),e("div",{staticClass:"language-csv extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("english,hello\nspanish,hola\nfrench,bonjour\n")])])]),e("ol",{attrs:{start:"3"}},[e("li",[t._v("File: "),e("code",[t._v("myjob.cfg")]),t._v(". This file defines global variables, configures two new jobs and the location of the ElasticSearch server.")])]),t._v(" "),e("div",{staticClass:"language-ini extra-class"},[e("pre",{pre:!0,attrs:{class:"language-ini"}},[e("code",[e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[DEFAULT]")]),t._v("\ncasename: rvt2-test\nsource: rvt2-test\n\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[myjob-test]")]),t._v("\ndescription: This job outputs to the standard output, for testing\nmodules:\n  base.print.JSONSink{'outfile':'CONSOLE'}\n  myjob.MyJob\n\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[myjob-elastic]")]),t._v("\ndescription: This job outputs a file than can be indexed using elasticdump or the job save_indexed_documents\nmodules:\n  base.print.JSONSink{'outfile':'output.json'}\n  plugins.indexer.elastic.ElasticSearchAdapter\n  myjob.MyJob\n\n"),e("span",{pre:!0,attrs:{class:"token selector"}},[t._v("[plugin.indexer.elastic.ElasticSearchAdapter]")]),t._v("\neshosts: http://localhost:9200\n")])])]),e("ol",{attrs:{start:"4"}},[e("li",[t._v("Check the jobs are registered: "),e("code",[t._v("rvt2 -c myjob.cfg")])]),t._v(" "),e("li",[t._v("File: "),e("code",[t._v("myjob.py")]),t._v(". Notice the class "),e("code",[t._v("myjob.MyJob")]),t._v(" is loaded in the jobs described above.")])]),t._v(" "),e("div",{staticClass:"language-python extra-class"},[e("pre",{pre:!0,attrs:{class:"language-python"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" base"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" csv\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyJob")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("base"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("job"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("BaseModule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("self"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("open")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'r'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" csvfile"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      csvreader "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" csv"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("reader"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("csvfile"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("delimiter"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("','")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" row "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("in")]),t._v(" csvreader"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("dict")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("language"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("row"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" content"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("row"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("ol",{attrs:{start:"6"}},[e("li",[t._v("Run: "),e("code",[t._v("rvt2 -c myjob.cfg -j myjob-test input.csv")]),t._v(" and check everything is OK.")]),t._v(" "),e("li",[t._v("Run: "),e("code",[t._v("rvt2 -c myjob.cfg -j myjob-elastic input.csv")]),t._v(". The output will be in "),e("code",[t._v("output.json")]),t._v(". You can send this file to an ElasticSearch server using  one of the default jobs provided by the RVT2 or "),e("a",{attrs:{href:"https://github.com/taskrabbit/elasticsearch-dump",target:"_blank",rel:"noopener noreferrer"}},[t._v("elasticdump"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("li",[t._v("Run: "),e("code",[t._v("rvt2 -c myjob.cfg -j save_indexed_documents output.json")]),t._v(". The output will be indexed in an ElasticSearch server. Notice the job "),e("code",[t._v("save_indexed_documents")]),t._v(" is not defined in "),e("code",[t._v("myjob.cfg")]),t._v(", but it is one of the default jobs in "),e("code",[t._v("$RVT2HOME/conf/indexer/jobs.cfg")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);