(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{389:function(e,t,r){"use strict";r.r(t);var a=r(42),o=Object(a.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"section-indexer"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#section-indexer"}},[e._v("#")]),e._v(" Section indexer")]),e._v(" "),r("p",[e._v("This plugin parses files using "),r("a",{attrs:{href:"https://tika.apache.org/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("Tika"),r("OutboundLink")],1),e._v(" and indexes documents in "),r("a",{attrs:{href:"https://www.elastic.co",target:"_blank",rel:"noopener noreferrer"}},[e._v("ElasticSearch"),r("OutboundLink")],1),e._v(".")]),e._v(" "),r("p",[e._v("You can use this plugin:")]),e._v(" "),r("ul",[r("li",[e._v("To parse all documents in a directory with Tika and index the results in Elastic. This is the main use of the classes in this plugin.")]),e._v(" "),r("li",[e._v("To parse documents with Tika and do something else with the result. For example, show a document's metadata in the screen.")]),e._v(" "),r("li",[e._v("To index the output of other RVT2 modules. For example, you can index the output of the PST parser.")])]),e._v(" "),r("h2",{attrs:{id:"running"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#running"}},[e._v("#")]),e._v(" Running")]),e._v(" "),r("p",[e._v("If you use the Tika module, you must run Tika in server mode by running "),r("code",[e._v("run.sh")]),e._v(" inside the "),r("code",[e._v("$RVT2_HOME/external_tools/tika")]),e._v(" directory. The first time you run this command, it will download Tika.")]),e._v(" "),r("p",[e._v("If you use the ElasticSearch indexer, you'll need an ElasticSearch >=6 server somewhere in the network. In some cases, ElasticSearch might need a special file system configuration. Also, if you are planning to use the "),r("RouterLink",{attrs:{to:"/analyzer/"}},[e._v("rvt2-analyzer")]),e._v(", the ElasticSearch must allow CORS requests at least from the domain of the analyzer. An example script to run ElasticSearch can be found inside the directory "),r("code",[e._v("$RVT2_HOME/external_tools/elastic")]),e._v(".")],1),e._v(" "),r("h2",{attrs:{id:"jobs"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#jobs"}},[e._v("#")]),e._v(" Jobs")]),e._v(" "),r("ul",[r("li",[r("code",[e._v("indexer.tag_and_export")]),e._v(": Runs "),r("code",[e._v("indexer.query_and_tag")]),e._v(", "),r("code",[e._v("indexer.save")]),e._v(", "),r("code",[e._v("indexer.export")]),e._v(" and "),r("code",[e._v("indexer.save")]),e._v(" to the remote ES.")]),e._v(" "),r("li",[r("code",[e._v("indexer.parse_file")]),e._v(": Parse a file and show the result in the standard output. Use for debugging.")]),e._v(" "),r("li",[r("code",[e._v("indexer.parse_directory")]),e._v(": Parse a directory and show the result in the standard output. Use for debugging.")]),e._v(" "),r("li",[r("code",[e._v("indexer.directory")]),e._v(": Parse a directory and save in "),r("code",[e._v("MORGUE/CASENAME/SOURCE/output/indexer/SOURCE.json")]),e._v(". This file is compatible with indexers.")]),e._v(" "),r("li",[r("code",[e._v("indexer.save")]),e._v(": Save a previously indexed database in an ElasticSearch server. Alternative to "),r("code",[e._v("elasticdump")]),e._v(".")]),e._v(" "),r("li",[r("code",[e._v("indexer.save_directory")]),e._v(": Run indexer.directory and then indexer.save with default parameters.")]),e._v(" "),r("li",[r("code",[e._v("indexer.convert_json")]),e._v(": Convert a JSON file to a JSON suitable to be sent to ElasticSearch using indexer.save")]),e._v(" "),r("li",[r("code",[e._v("indexer.convert_csv")]),e._v(": Convert a CSV file to a JSON suitable to be sent to ElasticSearch using indexer.save")]),e._v(" "),r("li",[r("code",[e._v("indexer.query_and_tag")]),e._v(": Query elastic, select all related documents (containers, attachments..) and tag all of them. You must indexer.save the output")]),e._v(" "),r("li",[r("code",[e._v("indexer.export")]),e._v(": Query elastic, select all documents matching a query and export them to a JSON.")]),e._v(" "),r("li",[r("code",[e._v("indexer.blind_searches")]),e._v(": Blind searches on a parsed JSON file, result from indexer.save.")]),e._v(" "),r("li",[r("code",[e._v("indexer.index_timeline_body")]),e._v(": Index a BODY file provided in the path.")]),e._v(" "),r("li",[r("code",[e._v("indexer.pst")]),e._v(": Parse PST files previously exported with indexer.export_pst.")]),e._v(" "),r("li",[r("code",[e._v("indexer.export_pst")]),e._v(": Export contents of every pst or ost file found in a source using pffexport.")]),e._v(" "),r("li",[r("code",[e._v("indexer.mails")]),e._v(": Export, parse and characterize contents of every pst or ost file found in a source")]),e._v(" "),r("li",[r("code",[e._v("indexer.pst_item2eml")]),e._v(": Convert a message extracted from a pst to an eml file.")])]),e._v(" "),r("h3",{attrs:{id:"job-indexer-tag-and-export"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#job-indexer-tag-and-export"}},[e._v("#")]),e._v(" Job "),r("code",[e._v("indexer.tag_and_export")])]),e._v(" "),r("p",[e._v("Runs "),r("code",[e._v("indexer.query_and_tag")]),e._v(", "),r("code",[e._v("indexer.save")]),e._v(", "),r("code",[e._v("indexer.export")]),e._v(" and "),r("code",[e._v("indexer.save")]),e._v(" to the remote ES.")]),e._v(" "),r("h4",{attrs:{id:"configurable-parameters"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#configurable-parameters"}},[e._v("#")]),e._v(" Configurable parameters")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Parameter")]),e._v(" "),r("th",[e._v("Description")]),e._v(" "),r("th",[e._v("Default")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("interfile")])]),e._v(" "),r("td"),e._v(" "),r("td",[r("code",[e._v("original.json")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("query")])]),e._v(" "),r("td",[e._v("The query to run. See "),r("code",[e._v("indexer.query_and_tag")]),e._v(".")]),e._v(" "),r("td",[r("code",[e._v("*")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("tag")])]),e._v(" "),r("td",[e._v("The name of the tag. See "),r("code",[e._v("indexer.query_and_tag")]),e._v(".")]),e._v(" "),r("td",[r("code",[e._v("exported")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("target")])]),e._v(" "),r("td",[e._v("The output wil be saved in file "),r("code",[e._v("target.json")]),e._v(" and directory "),r("code",[e._v("target")]),e._v(". See "),r("code",[e._v("indexer.export")]),e._v(".")]),e._v(" "),r("td",[r("code",[e._v("exported")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("es_export")])]),e._v(" "),r("td",[e._v("The URL to the remote ES server. "),r("strong",[e._v("You MUST overwrite this param")]),e._v(".")]),e._v(" "),r("td",[r("code",[e._v("https://192.168.109.29:9200")])])])])]),e._v(" "),r("h3",{attrs:{id:"job-indexer-parse-file"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#job-indexer-parse-file"}},[e._v("#")]),e._v(" Job "),r("code",[e._v("indexer.parse_file")])]),e._v(" "),r("p",[e._v("Parse a file and show the result in the standard output. Use for debugging.")]),e._v(" "),r("h3",{attrs:{id:"job-indexer-parse-directory"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#job-indexer-parse-directory"}},[e._v("#")]),e._v(" Job "),r("code",[e._v("indexer.parse_directory")])]),e._v(" "),r("p",[e._v("Parse a directory and show the result in the standard output. Use for debugging.")]),e._v(" "),r("h4",{attrs:{id:"configurable-parameters-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#configurable-parameters-2"}},[e._v("#")]),e._v(" Configurable parameters")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Parameter")]),e._v(" "),r("th",[e._v("Description")]),e._v(" "),r("th",[e._v("Default")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("filter")])]),e._v(" "),r("td",[e._v('List of file categories to parse. If not provided, parse all files. Predefined categories can be found in "file_categories.cfg" configuration file')]),e._v(" "),r("td",[e._v("``")])])])]),e._v(" "),r("h3",{attrs:{id:"job-indexer-directory"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#job-indexer-directory"}},[e._v("#")]),e._v(" Job "),r("code",[e._v("indexer.directory")])]),e._v(" "),r("p",[e._v("Parse a directory and save in "),r("code",[e._v("MORGUE/CASENAME/SOURCE/output/indexer/SOURCE.json")]),e._v(". This file is compatible with indexers.")]),e._v(" "),r("h4",{attrs:{id:"configurable-parameters-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#configurable-parameters-3"}},[e._v("#")]),e._v(" Configurable parameters")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Parameter")]),e._v(" "),r("th",[e._v("Description")]),e._v(" "),r("th",[e._v("Default")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("path")])]),e._v(" "),r("td",[e._v("The path to the directory to parse")]),e._v(" "),r("td",[e._v("``")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("outfile")])]),e._v(" "),r("td",[e._v("Save the result of the parsing in this file")]),e._v(" "),r("td",[r("code",[e._v("MORGUE/CASENAME/SOURCE/output/indexer/SOURCE.json")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("name")])]),e._v(" "),r("td",[e._v("The name of the indice to save the parsed files")]),e._v(" "),r("td",[r("code",[e._v("SOURCE")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("rvtindex")])]),e._v(" "),r("td",[e._v("The name of the indice to save metadata. Set to empty to not save metadata.")]),e._v(" "),r("td",[r("code",[e._v("rvtindexer")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("restartable")])]),e._v(" "),r("td",[e._v("If True, parsing can be restarted from the last error. Use with care!")]),e._v(" "),r("td",[r("code",[e._v("False")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("filter")])]),e._v(" "),r("td",[e._v('List of file categories to parse. If not provided, parse all files. Predefined categories can be found in "file_categories.cfg" configuration file')]),e._v(" "),r("td",[e._v("``")])])])]),e._v(" "),r("h3",{attrs:{id:"job-indexer-save"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#job-indexer-save"}},[e._v("#")]),e._v(" Job "),r("code",[e._v("indexer.save")])]),e._v(" "),r("p",[e._v("Save a previously indexed database in an ElasticSearch server. Alternative to "),r("code",[e._v("elasticdump")]),e._v(".")]),e._v(" "),r("h4",{attrs:{id:"configurable-parameters-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#configurable-parameters-4"}},[e._v("#")]),e._v(" Configurable parameters")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Parameter")]),e._v(" "),r("th",[e._v("Description")]),e._v(" "),r("th",[e._v("Default")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("path")])]),e._v(" "),r("td",[e._v("The path to a JSON file output from indexer.directory.")]),e._v(" "),r("td",[e._v("``")])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("restartable")])]),e._v(" "),r("td",[e._v("In True, the index can be restarted from an error. Use with care!")]),e._v(" "),r("td",[r("code",[e._v("False")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("mapping")])]),e._v(" "),r("td",[e._v("Path to the file describing the mapping of fields to ElasticSearch. The mapping can only be used when the index is created.")]),e._v(" "),r("td",[r("code",[e._v("/home/jvera/rvt2/plugins/indexer/es-settings.json")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("name")])]),e._v(" "),r("td",[e._v("Index name in ElasticSearch. If index does not exists, create it.")]),e._v(" "),r("td",[r("code",[e._v("SOURCE")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("cooloff_every")])]),e._v(" "),r("td",[e._v("After this number of seconds, wait cooloff_seconds.")]),e._v(" "),r("td",[r("code",[e._v("300")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("cooloff_seconds")])]),e._v(" "),r("td",[e._v("Seconds to wait to cool off ElasticSearch.")]),e._v(" "),r("td",[r("code",[e._v("5")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("es_hosts")])]),e._v(" "),r("td",[e._v('List of space separated ElasticSearch servers. Use format "http(s?)😕/HOST:PORT".')]),e._v(" "),r("td",[r("code",[e._v("https://elastic.incide.es:443")])])])])]),e._v(" "),r("h3",{attrs:{id:"job-indexer-save-directory"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#job-indexer-save-directory"}},[e._v("#")]),e._v(" Job "),r("code",[e._v("indexer.save_directory")])]),e._v(" "),r("p",[e._v("Run indexer.directory and then indexer.save with default parameters.")]),e._v(" "),r("h3",{attrs:{id:"job-indexer-convert-json"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#job-indexer-convert-json"}},[e._v("#")]),e._v(" Job "),r("code",[e._v("indexer.convert_json")])]),e._v(" "),r("p",[e._v("Convert a JSON file to a JSON suitable to be sent to ElasticSearch using indexer.save")]),e._v(" "),r("h4",{attrs:{id:"configurable-parameters-5"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#configurable-parameters-5"}},[e._v("#")]),e._v(" Configurable parameters")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Parameter")]),e._v(" "),r("th",[e._v("Description")]),e._v(" "),r("th",[e._v("Default")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("outfile")])]),e._v(" "),r("td"),e._v(" "),r("td",[r("code",[e._v("output.json")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("disableCommonFields")])]),e._v(" "),r("td"),e._v(" "),r("td",[r("code",[e._v("True")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("generate_id")])]),e._v(" "),r("td"),e._v(" "),r("td",[r("code",[e._v("False")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("index_name")])]),e._v(" "),r("td"),e._v(" "),r("td",[r("code",[e._v("SOURCE")])])])])]),e._v(" "),r("h3",{attrs:{id:"job-indexer-convert-csv"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#job-indexer-convert-csv"}},[e._v("#")]),e._v(" Job "),r("code",[e._v("indexer.convert_csv")])]),e._v(" "),r("p",[e._v("Convert a CSV file to a JSON suitable to be sent to ElasticSearch using indexer.save")]),e._v(" "),r("ul",[r("li",[e._v("path: the CSV file to convert. It must be provided")]),e._v(" "),r("li",[e._v("output: configure outfile param. Default value: output.json")])]),e._v(" "),r("h4",{attrs:{id:"configurable-parameters-6"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#configurable-parameters-6"}},[e._v("#")]),e._v(" Configurable parameters")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Parameter")]),e._v(" "),r("th",[e._v("Description")]),e._v(" "),r("th",[e._v("Default")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("outfile")])]),e._v(" "),r("td"),e._v(" "),r("td",[r("code",[e._v("output.csv")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("delimiter")])]),e._v(" "),r("td"),e._v(" "),r("td",[r("code",[e._v(";")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("disableCommonFields")])]),e._v(" "),r("td"),e._v(" "),r("td",[r("code",[e._v("True")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("generate_id")])]),e._v(" "),r("td"),e._v(" "),r("td",[r("code",[e._v("False")])])])])]),e._v(" "),r("h3",{attrs:{id:"job-indexer-query-and-tag"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#job-indexer-query-and-tag"}},[e._v("#")]),e._v(" Job "),r("code",[e._v("indexer.query_and_tag")])]),e._v(" "),r("p",[e._v("Query elastic, select all related documents (containers, attachments..) and tag all of them. You must indexer.save the output")]),e._v(" "),r("h4",{attrs:{id:"configurable-parameters-7"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#configurable-parameters-7"}},[e._v("#")]),e._v(" Configurable parameters")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Parameter")]),e._v(" "),r("th",[e._v("Description")]),e._v(" "),r("th",[e._v("Default")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("outfile")])]),e._v(" "),r("td",[e._v("The output of the job. You must indexer.save this file")]),e._v(" "),r("td",[r("code",[e._v("MORGUE/CASENAME/SOURCE/output/indexer/SOURCE.json")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("query")])]),e._v(" "),r("td",[e._v("The query to run")]),e._v(" "),r("td",[r("code",[e._v("*")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("tag")])]),e._v(" "),r("td",[e._v("The name of the tag")]),e._v(" "),r("td",[r("code",[e._v("EXPORT")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("tag_field")])]),e._v(" "),r("td",[e._v("Save tags in this field. Use one of the registered tag fields in ElasticSearchBulkIndex (hints: tags-new or blindsearches-new)")]),e._v(" "),r("td",[r("code",[e._v("tags-new")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("max_results")])]),e._v(" "),r("td",[e._v("If the query will return more than this number of results, stop.")]),e._v(" "),r("td",[r("code",[e._v("1000")])])])])]),e._v(" "),r("h3",{attrs:{id:"job-indexer-export"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#job-indexer-export"}},[e._v("#")]),e._v(" Job "),r("code",[e._v("indexer.export")])]),e._v(" "),r("p",[e._v("Query elastic, select all documents matching a query and export them to a JSON.\nThe target JSON file must be saved to another ElasticSearch using "),r("code",[e._v("indexer.save")]),e._v(".")]),e._v(" "),r("h4",{attrs:{id:"configurable-parameters-8"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#configurable-parameters-8"}},[e._v("#")]),e._v(" Configurable parameters")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Parameter")]),e._v(" "),r("th",[e._v("Description")]),e._v(" "),r("th",[e._v("Default")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("query")])]),e._v(" "),r("td",[e._v("The query to run.")]),e._v(" "),r("td",[r("code",[e._v("*")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("target")])]),e._v(" "),r("td",[e._v("The output wil be saved in file "),r("code",[e._v("target.json")]),e._v(" and directory "),r("code",[e._v("target")]),e._v(".")]),e._v(" "),r("td",[r("code",[e._v("export")])])])])]),e._v(" "),r("h3",{attrs:{id:"job-indexer-blind-searches"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#job-indexer-blind-searches"}},[e._v("#")]),e._v(" Job "),r("code",[e._v("indexer.blind_searches")])]),e._v(" "),r("p",[e._v("Blind searches on a parsed JSON file, result from indexer.save.")]),e._v(" "),r("h4",{attrs:{id:"configurable-parameters-9"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#configurable-parameters-9"}},[e._v("#")]),e._v(" Configurable parameters")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Parameter")]),e._v(" "),r("th",[e._v("Description")]),e._v(" "),r("th",[e._v("Default")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("keyword_file")])]),e._v(" "),r("td",[e._v("The name of the keyword file in the searches directory.")]),e._v(" "),r("td",[r("code",[e._v("kw")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("outfile")])]),e._v(" "),r("td",[e._v("Save the results to this file, ready to be used with indexer.save")]),e._v(" "),r("td",[r("code",[e._v("MORGUE/CASENAME/SOURCE/output/indexer/SOURCE.blindsearches.json")])])])])]),e._v(" "),r("h3",{attrs:{id:"job-indexer-index-timeline-body"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#job-indexer-index-timeline-body"}},[e._v("#")]),e._v(" Job "),r("code",[e._v("indexer.index_timeline_body")])]),e._v(" "),r("p",[e._v("Index a BODY file provided in the path.")]),e._v(" "),r("h4",{attrs:{id:"configurable-parameters-10"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#configurable-parameters-10"}},[e._v("#")]),e._v(" Configurable parameters")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Parameter")]),e._v(" "),r("th",[e._v("Description")]),e._v(" "),r("th",[e._v("Default")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("outfile")])]),e._v(" "),r("td"),e._v(" "),r("td",[r("code",[e._v("MORGUE/CASENAME/SOURCE/output/indexer/SOURCE.timeline.json")])])])])]),e._v(" "),r("h3",{attrs:{id:"job-indexer-pst"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#job-indexer-pst"}},[e._v("#")]),e._v(" Job "),r("code",[e._v("indexer.pst")])]),e._v(" "),r("p",[e._v("Parse PST files previously exported with indexer.export_pst.\nThis module also calls to indexer.pst.secondary.")]),e._v(" "),r("h4",{attrs:{id:"configurable-parameters-11"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#configurable-parameters-11"}},[e._v("#")]),e._v(" Configurable parameters")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Parameter")]),e._v(" "),r("th",[e._v("Description")]),e._v(" "),r("th",[e._v("Default")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("outfile")])]),e._v(" "),r("td",[e._v("A JSON file with all the information in the mailboxes, ready to be imported into ElasticSearch")]),e._v(" "),r("td",[r("code",[e._v("MORGUE/CASENAME/SOURCE/output/indexer/SOURCE.pst.json")])])])])]),e._v(" "),r("h3",{attrs:{id:"job-indexer-export-pst"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#job-indexer-export-pst"}},[e._v("#")]),e._v(" Job "),r("code",[e._v("indexer.export_pst")])]),e._v(" "),r("p",[e._v("Export contents of every pst or ost file found in a source using pffexport.\nThis job depends on plugins.common and the succesful generation of alloc_files.")]),e._v(" "),r("h4",{attrs:{id:"configurable-parameters-12"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#configurable-parameters-12"}},[e._v("#")]),e._v(" Configurable parameters")]),e._v(" "),r("table",[r("thead",[r("tr",[r("th",[e._v("Parameter")]),e._v(" "),r("th",[e._v("Description")]),e._v(" "),r("th",[e._v("Default")])])]),e._v(" "),r("tbody",[r("tr",[r("td",[r("code",[e._v("outfile")])]),e._v(" "),r("td",[e._v("A CSV containing the path to the actual pstfiles and their reference")]),e._v(" "),r("td",[r("code",[e._v("MORGUE/CASENAME/SOURCE/output/mail/pstfiles.csv")])])]),e._v(" "),r("tr",[r("td",[r("code",[e._v("outdir")])]),e._v(" "),r("td",[e._v("Export the contents of PST files to this directory")]),e._v(" "),r("td",[r("code",[e._v("MORGUE/CASENAME/SOURCE/output/mail/")])])])])]),e._v(" "),r("h3",{attrs:{id:"job-indexer-mails"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#job-indexer-mails"}},[e._v("#")]),e._v(" Job "),r("code",[e._v("indexer.mails")])]),e._v(" "),r("p",[e._v("Export, parse and characterize contents of every pst or ost file found in a source")]),e._v(" "),r("h3",{attrs:{id:"job-indexer-pst-item2eml"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#job-indexer-pst-item2eml"}},[e._v("#")]),e._v(" Job "),r("code",[e._v("indexer.pst_item2eml")])]),e._v(" "),r("p",[e._v("Convert a message extracted from a pst to an eml file.")]),e._v(" "),r("ul",[r("li",[e._v("path: the path to a Message folder")])]),e._v(" "),r("div",{staticClass:"custom-block warning"},[r("p",{staticClass:"custom-block-title"},[e._v("WARNING")]),e._v(" "),r("p",[e._v("This chapter was created automatically using "),r("code",[e._v('rvt2 -j help indexer --params show_vars="" template_file="templates/help_section_complete.mako" outfile="rvt2/indexer.md"')]),e._v(". Do not modify manually this file.")])])])}),[],!1,null,null,null);t.default=o.exports}}]);